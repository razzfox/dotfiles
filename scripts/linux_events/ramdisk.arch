  if [[ $1 == mac ]]; then
    if [[ -z $2 ]]; then
      size=$2
    else
      size=4194304
    fi

    diskutil erasevolume FAT32 "$USER" `hdiutil attach -nomount ram://${size}`
  fi

  if [[ $(df -h | grep -e 'tmpfs' | grep -c -e "/mnt/$USER") != 0 ]]; then
    if [[ $1 == umount ]]; then
      umount /mnt/$USER
      rmdir /mnt/$USER
    else
      echo "Ramdisk already mounted:"
      df -h | head -n 1
      df -h | grep -e "/mnt/$USER"

      if [[ $( echo $1 | grep -c [^[:digit:]] ) == 1 ]] || [[ $1 == --help ]] || ( [[ $# == 3 ]] && [[ $2 != -u ]] ) || !( [[ $# == 1 ]] || [[ $# == 3 ]] ); then
        echo "Usage: sudo ramdisk.sh SIZE_IN_MB [OR umount]"
        return 0
      fi
    fi
    return 1
  elif [[ $1 == umount ]]; then
    echo "Error: umount: No ramdisk mounted" >/dev/stderr
    df -h >/dev/stderr
    return 1
  else
    if [[ $# == 0 ]]; then
      echo "Ramdisk not mounted"
    fi

    if [[ $( echo $1 | grep -c [^[:digit:]] ) == 1 ]] || [[ $1 == --help ]] || ( [[ $# == 3 ]] && [[ $2 != -u ]] ) || !( [[ $# == 1 ]] || [[ $# == 3 ]] ); then
        echo "Usage: sudo $0 SIZE_IN_MB [OR umount]"
        return 1
    fi

    if [[ $EUID != 0 ]]; then
      su --command "$0 $1 -u $USER"
    fi
  fi

  echo "Making directory /mnt/$3"
  mkdir --parents /mnt/$3

  echo "Mounting tmpfs size=${1}M /mnt/$3"
  mount -t tmpfs -o size=${1}M tmpfs /mnt/$3

  echo "Adding owner $3 to /mnt/$3"
  chown $3 /mnt/$3

  df -h | head -n 1
  df -h | grep -e "/mnt/$3"
