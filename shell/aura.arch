break="----------------------------------------------------------------------------"

# aur.sh dc2f3fcaa9 taken Jan 7, 2014 from https://github.com/stuartpb/aur.sh/blob/master/aur.sh
aur.sh() {
  echo '
  d=${BUILDDIR:-/tmp}
  for p in ${@##-*}
    do
    cd "$d"
    curl "https://aur.archlinux.org/packages/${p:0:2}/$p/$p.tar.gz" |tar xz
    cd "$p"
    nano PKGBUILD
    makepkg --clean --install --syncdeps ${@##[^\-]*}
  done'
}

aura() {
#  pushd .
#  cd "${BUILDDIR:-/tmp}"

  if test -f /opt/wrapaur; then
    aur="/opt/wrapaur -a"
  else
    aur="${BUILDDIR:-/tmp}/aur.sh"
    aur.sh >"$aur"
    chmod +x "$aur"
  fi

  echo "Backup sudoers file:"
  $(which cp) --verbose /etc/sudoers /etc/sudoers.orig

  # user where=(who) NOPASSWD: what
  echo "Add '${BUILDUSER:-nobody} ALL=(root) NOPASSWD: ALL' to '/etc/sudoers'"
  echo "${BUILDUSER:-nobody} ALL=(root) NOPASSWD: ALL" >>/etc/sudoers
  #echo "${BUILDUSER:-nobody} ALL=(root) NOPASSWD: $(which sudo) $(which pacman) $aur" >>/etc/sudoers

  echo sudo -u ${BUILDUSER:-nobody} $aur "$@"
  sudo -u ${BUILDUSER:-nobody} $aur "$@"

  echo "Revert sudoers file:"
  $(which mv) --verbose /etc/sudoers.orig /etc/sudoers

#  popd
}

aura_edit_pkgbuild() {
  aura --hotedit "$@"
}

auras() {
  less --quit-if-one-screen --LONG-PROMPT --force --RAW-CONTROL-CHARS <(echo -e "${break}\nArch Official:\n$break"; aura -Ss --color=always "$@"; echo -e "${break}\nAUR Unofficial:\n$break"; aura -As "$@")
}
