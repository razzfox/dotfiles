# Login environment (exports all variables for subshells to use)
# Beware: do not source functions here as it will not export to subshells, as this file is only called for login shells.
# Subsequent shells read shellrc directly, and this file sources it at the end (if interactive).

# Dotfiles
test -z "${DOTFILES}" && export DOTFILES="$HOME/dotfiles"

# SSH-Agent
if test -f $HOME/.ssh/id_rsa -a ! -S ${SSH_AUTH_SOCK:-/dev/null} ; then
  eval $( cat /tmp/ssh-$USER 2>/dev/null ) &>/dev/null

  if test ! -S ${SSH_AUTH_SOCK:-/dev/null} ; then
    eval $( ssh-agent -s | tee /tmp/ssh-$USER ) &>/dev/null

    echo "SSH-Agent: $SSH_AGENT_PID"
    echo -n "bash: .profile: Press Enter to skip. "
    if ! ssh-add $HOME/.ssh/id_rsa 2>/dev/null ; then
      kill $SSH_AGENT_PID
      rm /tmp/ssh-$USER
      unset SSH_AGENT_PID
      unset SSH_AUTH_SOCK
    fi
  fi
fi

# Tmux
test -z "$TMUX_CONF" && export TMUX_CONF="$HOME/.config/tmux/tmuxrc"


# Path
test -z "$BIN_HOME" -a -d $HOME/bin && export BIN_HOME="$HOME/bin" && export PATH="$BIN_HOME:$PATH"
test -z "$GEM_HOME" -a -d $HOME/.gem && export GEM_HOME="$HOME/.gem" && export PATH="$(ruby -e 'puts Gem.user_dir')/bin:$PATH"
test -z "$GOPATH" -a -d $HOME/.gocode && export GOPATH="$HOME/.gocode" && export PATH="$GOPATH/bin:$PATH"
test -z "$RUBYPATH" -a -d $HOME/.rubycode && export RUBYPATH="$HOME/.rubycode" && export PATH="$RUBYPATH/bin:$PATH"


# Other vars
export LC_ALL="en_US.UTF-8"
export EDITOR="$(which nano)" # single line-based editor (the distinction is no longer recognized)
export VISUAL="$EDITOR" #  milti-line (whole screen) editor
export PAGER="$(which less)" # view text output in scrolling pages instead of textdump
# To stop glibc programs from calling stat on /etc/localtime
export TZ=:/etc/localtime


# Fix conflicts from system settings
unalias -a


# Detect OS (kernel) and ID (distro)
test -z "$OS" && export OS="$(uname | tr '[:upper:]' '[:lower:]')"
case "$OS" in
linux)
  source /etc/os-release
  test "$ID" = "archarm" && export ID='arch'
  export OS
  export ID
  ;;
darwin)
  export PATH="/Volumes/shared/documentation/sdk/platform-tools:/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/nano/bin:/usr/local/sbin:$PATH"
  export ID='osx'
  test -z "$HOME" && export HOME="/Users/$(whoami)"
  ;;
Windows_NT|CYGWIN_NT-*)
  export OS='windows'
  export ID='cygwin'
  ;;
esac


# Shell functions if interactive
if test -t 0; then
 source $HOME/.config/${SHELL##*/}/${SHELL##*/}rc
fi
